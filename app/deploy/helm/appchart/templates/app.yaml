apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  labels:
    app: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      initContainers:
      - name: app-initcontainer
        imagePullPolicy: Always
        image: docker.io/dancb10/app
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /var/lib/db-migrate
          name: db-migrate
        command: ['sh', '-c', "/home/app/db-migrate.sh"]
      containers:
      - name: app
        imagePullPolicy: Always
        image: docker.io/dancb10/app
        ports:
        - containerPort: 8080
      volumes:
        - name: db-migrate
          persistentVolumeClaim:
            claimName: db-migrate-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: app
  labels:
    app: app
spec:
  type: NodePort
  ports:
   - port: 8080
  selector:
   app: app
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: db-migrate-pv-volume
  labels:
    type: local
    app: db-migrate
spec:
  persistentVolumeReclaimPolicy: Delete
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/db-migrate"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: db-migrate-pv-claim
  labels:
    app: db-migrate
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
